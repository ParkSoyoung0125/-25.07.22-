1. DataBase Applications
- 데이터가 많을 때 효율적으로 관리하기 위해 사용
- DB시스템의 특성
	* 최초 적재 -> 이벤트 발생에 따른 잦은 변경
	* 대용량의 데이터를 다룸
	
(1) DataBase : 데이터 및 데이터 간 관계의 집합
(2) DBMS(DataBase Management System) : 사용자가 DB에 접근할 수 있도록 지원해주는 프로그램의 집합
										(ex) 오라클, MS-SQL, MS-ACCESS, MySQL 등
										
2. 데이터베이스 스키마(Schema)와 인스턴스(Instances)
	(1) 데이터베이스 스키마(Schema)
		- 데이터베이스 구조, 데이터 타입, 제약조건에 대한 명세
		- 데이터베이스 설계 단계에서 명시되며, 자주 변경되지 않음.
	
	(2) 데이터베이스 인스턴스
	- 특정시점에 데이터베이스에 실제로 저장되어 있는 데이터
	(예시)
	스키마  	->		학생명		입학년도		학생번호
	인스턴스 	->		홍길동		2024		cs1310
					김길동		2025		cs1420
					
3. SQL
	DBMS 언어
	(1) DML(Data Manipulation Language) : 데이터 조작어
		- 데이터의 조회(Retrieval), 삽입(Insertion), 삭제(Deletion), 갱신(Update), 병합(Merge)에 사용
	
	(2) DDL(Data Definition Language) : 데이터 정의어
		- 스키마를 기술하기 위해 사용, 주로 DB 설계자가 사용함.
	
	(3) DCL(Data Control Language) : 사용자 권한 관리
	
	(4) TCL(Transaction Control Language) : 트랜잭션 관리
	
4. 모델링의 3단계
	(1) 개념적 데이터 모델링
		- 전사적으로 수행
		- 업무중심적이고 포괄적인 수준의 모델링(추상화 레벨이 제일 높다)
		- ERM의 최종 산출물이 ERD임.
		
	(2) 논리적 데이터 모델링
		- 논리데이터모델을(컴퓨터가 알아듣게끔) 정규화하는 단계
		- KEY, 속성, 관계들을 표현하는 단계
	
	(3) 물리적 데이터 모델링
		- 실제 DB를 구현할 수 있도록 성능, 가용성 등 물리적 요소를 고려하는 단계
		
5. ERM Concepts
	(1) 개체(Entity)
		- 실세계에 존재하는 하나의 정보단위
		- 물리적 객체 뿐 아니라 개념적 객체도 포함
			(ex) 학생, 자동차 / 프로젝트, 직업 등
	
	(2) 관계(Relationship)
		- 개체들 사이의 연관성
		(예시) [학생]과 [교과목] 사이의 <수강> 관계
		* [학생]==<수강> ==[교과목]
		