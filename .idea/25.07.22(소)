2025.07.22(화)
1. 인텔리제이 설치
	*설치경로 : https://www.jetbrains.com/idea/
	[Clone Respository] : 깃에 있는 코드 갖고오기
	*Ctrl+Alt+S : 세팅 단축키
	- Ctrl+휠(화면 확대하기) : 세팅가서 "sofr-wrap" 검색 후 [Mouse control]에서 설정
	- [Soft-Wraps]에 *.java 추가하기 
	- encoding : 한글깨짐을 방지하려면 인코딩 문자열을 바꿔줘야함
		[Global Encoding], [project Encoding], [default Encoding for project files]
		전부 "UTF-8"로 변경
	-[Editor] -> [Inlay Hints] -> [Usages] 끄기 : 쓸데없는 주석 및 힌트 없애기

2. 자바 간략히 코딩
	JDK 버전 바꾸는 법
	[Project Structure] - [Project] - [SDK] 변경가능
	
3. Git 과 Github
	- Git : 로컬 PC(개인컴퓨터)에서 소스코드 변경 및 버전관리
	- Github : 클라우드 방식으로 협업에 최적화
	*Git 설치 경로 : https://git-scm.com/downloads/win
	=Respository 만드는 경로
	[Create Respository] -> "Respository name" 설정 -> "Description"(생성목적)
	-> "Public(전체공개)/Private(나만보기)" 선택 -> "Create"
	내 깃 주소 : https://github.com/ParkSoyoung0125/my_java_project.git
	
4. 인텔리제이와 Git
	-1) git과 연동
	[Version Control] -> [Git] -> [Path to Git executable] -> [C:Program Files/Git/bin/git.exe]
	-2) Github와 연동
	[Version Control] -> [GitHub] -> [log in]
	
5. Respository
	원격 저장소(Remote Respository) : 서버나 네트워크 상에 존재하는 전용서버에서 관리되며 여러사람과 함께 공유
	로컬 저장소(Local Respository) : 본인 컴퓨터에 파일이 저장되는 개인전용저장소
	
* [프로젝트 생성] -> [add:수정된 파일을 로드] -> [commit:로드된 파일을 저장소에 담기] -> [Push:담겨진 파일을 깃에 업로드] 순서로 진행
	ammend:커밋(저장)한 파일 불러오기 -> ammend한 후에 푸시
	
6. commit : GitHub에 파일 및 코드를 Push하기 전에 Git 실행파일을 인텔리제이와 연동하는 작업

7. Push : 내가 만든 코드 깃으로 보내기
		=> 인텔리제이에서 코드를 수정했어도 Github에 Push하지 않으면 수정사항이 반영되지 않음.
	* 코드 수정 후 수정한 클래스 우클릭 -> [Git] -> [Commit Files] -> 변경한 코드 체크박스 체크 -> Commit and Push
	
8. Pull : 깃에서 외부파일(remote)을 내 껄(local)로 가져오기 / 기존 파일에서 (로컬에 없었던) 수정사항만 추가됨

9. Clone : 남이 만든 파일을 "복제"해오는 것. / 파일 통째로 복제해서 가져오기
	* 순서 / [File] - [Git] - [Clone] - {Git Url 삽입}